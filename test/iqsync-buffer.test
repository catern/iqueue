#! /bin/bash
#   Copyright 2021 Two Sigma Open Source, LLC
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#       http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.


#
# Test iqsync using tcp
#

# Global settings
DIR=$(dirname $0)
PROG=$(basename $0)
PKGDIR=$(cd $(dirname ${0})/../..; pwd -L)

# Populate the TS_*_HOME variables
eval $($(${PKGDIR}/bin/gettools)/bin/makepath -s -r ${PKGDIR})

WORKDIR="$(mktemp -d -t $PROG.XXXXXXXXXX)"
DCATSIMPLE=${TS_DCAT_NATIVE_HOME}/bin/dcatsimple
trap "rm -fr $WORKDIR" 0 1 2 3 15

echo Using $WORKDIR
IQ1=$WORKDIR/iq1.iqx
IQ2=$WORKDIR/iq2.iqx
IQ3=$WORKDIR/iq3.iqx
IQ4=$WORKDIR/iq4.iqx

die() {
    echo >&2 "$@"
    exit 1
}

warn() {
    echo >&2 "$@"
}

log() {
    echo >&2 "--------- $@ -----------"
}

export IQSYNC_CMD=${PKGDIR}/bin/iqsync
export IQSYNC_RSH=${PKGDIR}/sh/nop-ssh

echo Header1 | ${PKGDIR}/bin/iqueue \
    -f $IQ1 \
    --create \
    --header \
|| die "$IQ1: Unable to create"

for n in {1..100000}; do echo "iqueue message $n";done | $PKGDIR/bin/iqueue \
    -f $IQ1 \
    --line

#################
#
# Test clone into an new iqueue with recv buffer.
# Should succeed.
#
log "iq1 clone into iq2 with recv buffer"

$PKGDIR/bin/iqsync \
    -f $IQ2 \
    --clone \
    --verbose \
    --sleep 100 \
    --type tcp \
    --launch-server \
    --recv-buffer \
    localhost:$IQ1 \
    >> $WORKDIR/iqsync.1.1.log \
    2>&1 \
|| die "iqsync --clone -f iq2 iq1 (new)"

log "Checking iqueues"
$PKGDIR/bin/iqueue \
    -f $IQ1 \
    > $WORKDIR/iq1.txt \

$PKGDIR/bin/iqueue \
    -f $IQ2 \
    > $WORKDIR/iq2.txt \

diff $WORKDIR/iq{1,2}.txt || die "sync failed"

################
#
# Test push as well.
# Should succeed.
#
log "iq2 push into iq1"
$PKGDIR/bin/iqsync \
    -f $IQ2 \
    --push \
    --validate \
    --verbose \
    --sleep 100 \
    --type tcp \
    --launch-server \
    --recv-buffer \
    localhost:$IQ1 \
    >> $WORKDIR/iqsync.1.2.log \
    2>&1 \
|| die "iqsync --push --validate -f iq2 iq1 (existing)"


#################
#
# Test clone into an new iqueue with send buffer.
# Should succeed.
#
log "iq1 clone into iq3 with send buffer"

$PKGDIR/bin/iqsync \
    -f $IQ3 \
    --clone \
    --verbose \
    --sleep 100 \
    --type tcp \
    --launch-server \
    --send-buffer \
    localhost:$IQ1 \
    >> $WORKDIR/iqsync.2.1.log \
    2>&1 \
|| die "iqsync --clone -f iq3 iq1 (new)"

log "Checking iqueues"
$PKGDIR/bin/iqueue \
    -f $IQ3 \
    > $WORKDIR/iq3.txt \

diff $WORKDIR/iq{1,3}.txt || die "sync failed"

#################
#
# Test clone into an new iqueue with send buffer.
# Should succeed.
#
log "iq1 clone into iq3 with send buffer"

$PKGDIR/bin/iqsync \
    -f $IQ3 \
    --clone \
    --verbose \
    --sleep 100 \
    --type tcp \
    --launch-server \
    --send-buffer \
    localhost:$IQ1 \
    >> $WORKDIR/iqsync.2.log \
    2>&1 \
|| die "iqsync --clone -f iq3 iq1 (new)"

log "Checking iqueues"
$PKGDIR/bin/iqueue \
    -f $IQ3 \
    > $WORKDIR/iq3.txt \

diff $WORKDIR/iq{1,3}.txt || die "sync failed"

################
#
# Test push as well.
# Should succeed.
#
log "iq3 push into iq1"
$PKGDIR/bin/iqsync \
    -f $IQ3 \
    --push \
    --validate \
    --verbose \
    --sleep 100 \
    --type tcp \
    --launch-server \
    --recv-buffer \
    localhost:$IQ1 \
    >> $WORKDIR/iqsync.2.2.log \
    2>&1 \
|| die "iqsync --push --validate -f iq3 iq1 (existing)"


log "Waiting"
sleep 10

for iq in $IQ1 $IQ2 $IQ3; do
    $PKGDIR/bin/iqueue \
	-f $iq \
	--stats \

done


pkill -P $$
exit 0
